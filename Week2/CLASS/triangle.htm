<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
</head>
<script src="http://greggman.github.com/webgl-fundamentals/webgl/resources/webgl-utils.js"></script>
<body>
<canvas id="canvas" width="400" height="400"></canvas>
<br><br/>
<button id="transform" onclick="TransformTriangle()">转换</button>
<input type="range" id ="degreeRange" min="0" max="2" value="1" step="0.1"/>
<input type="range" min="1" id="numsRange" max="100" value="6" step="1"/>

<script id="2d-vertex-shader" type="x-shader/x-vertex">
    attribute vec2 a_position;

    uniform vec2 u_resolution;
    uniform float u_degree;
    uniform vec2 u_center;

    void main() {
        // convert the rectangle from pixels to 0.0 to 1.0
        vec2 zeroToOne = a_position / u_resolution;

        // convert from 0->1 to 0->2
        vec2 zeroToTwo = zeroToOne * 2.0;

        // convert from 0->2 to -1->+1 (clipspace)
        vec2 clipSpace = (zeroToTwo - 1.0) * vec2(1,-1);

        //旋转变换
        float d = distance(a_position, u_center);
        float radian = radians(u_degree * d);
        vec2 rotatedVec = vec2(clipSpace.x * cos(radian) - clipSpace.y * sin(radian),
         clipSpace.x * sin(radian) + clipSpace.y * cos(radian));

        gl_Position = vec4(rotatedVec, 0, 1);
    }
  </script>

<script id="2d-fragment-shader" type="x-shader/x-fragment">
    precision mediump float;

    void main() {
        gl_FragColor = vec4( 0.0, 1.0, 0.0, 1.0 );
    }
  </script>

<script src="triangle.js" type="text/javascript"></script>
</body>
